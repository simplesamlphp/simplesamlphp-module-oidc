services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true
    autoconfigure: true
    public: false
    bind:
      #Psr\Log\LoggerInterface: '@SimpleSAML\Module\oidc\Services\LoggerService'
      League\OAuth2\Server\Repositories\ClientRepositoryInterface: '@SimpleSAML\Module\oidc\Repositories\ClientRepository'
      League\OAuth2\Server\Repositories\AccessTokenRepositoryInterface: '@SimpleSAML\Module\oidc\Repositories\AccessTokenRepository'
      League\OAuth2\Server\Repositories\ScopeRepositoryInterface: '@SimpleSAML\Module\oidc\Repositories\ScopeRepository'
      League\OAuth2\Server\CryptKey|string $privateKey: '@oidc.key.private'
      League\OAuth2\Server\CryptKey|string $publicKey: '@oidc.key.public'
      Psr\Http\Message\ServerRequestFactoryInterface: '@Laminas\Diactoros\ServerRequestFactory'
      Psr\Http\Message\RequestFactoryInterface: '@Laminas\Diactoros\RequestFactory'
      Psr\Http\Message\ResponseFactoryInterface: '@Laminas\Diactoros\ResponseFactory'
      Psr\Http\Message\StreamFactoryInterface: '@Laminas\Diactoros\StreamFactory'
      Psr\Http\Message\UploadedFileFactoryInterface: '@Laminas\Diactoros\UploadedFileFactory'
      League\OAuth2\Server\AuthorizationValidators\AuthorizationValidatorInterface: '@SimpleSAML\Module\oidc\Server\Validators\BearerTokenValidator'

  SimpleSAML\Module\oidc\Services\:
    resource: '../../src/Services/*'
    exclude: '../../src/Services/{Container.php}'

  SimpleSAML\Module\oidc\Repositories\:
    resource: '../../src/Repositories/*'
    exclude: '../../src/Repositories/{Interfaces}'

  SimpleSAML\Module\oidc\Factories\:
    resource: '../../src/Factories/*'

  SimpleSAML\Module\oidc\Stores\:
    resource: '../../src/Stores/*'

  SimpleSAML\Module\oidc\Bridges\:
    resource: '../../src/Bridges/*'

  SimpleSAML\Module\oidc\ModuleConfig: ~
  SimpleSAML\Module\oidc\Helpers: ~
  SimpleSAML\Module\oidc\Forms\Controls\CsrfProtection: ~
  SimpleSAML\Module\oidc\Server\RequestRules\RequestRulesManager:
    factory: ['@SimpleSAML\Module\oidc\Factories\RequestRulesManagerFactory', 'build']
  # Grants
  SimpleSAML\Module\oidc\Server\Grants\AuthCodeGrant:
    factory: ['@SimpleSAML\Module\oidc\Factories\Grant\AuthCodeGrantFactory', 'build']
  SimpleSAML\Module\oidc\Server\Grants\OAuth2ImplicitGrant:
    factory: ['@SimpleSAML\Module\oidc\Factories\Grant\OAuth2ImplicitGrantFactory', 'build']
  SimpleSAML\Module\oidc\Server\Grants\ImplicitGrant:
    factory: ['@SimpleSAML\Module\oidc\Factories\Grant\ImplicitGrantFactory', 'build']
  SimpleSAML\Module\oidc\Server\Grants\RefreshTokenGrant:
    factory: ['@SimpleSAML\Module\oidc\Factories\Grant\RefreshTokenGrantFactory', 'build']
  # Responses
  SimpleSAML\Module\oidc\Server\ResponseTypes\IdTokenResponse:
    factory: ['@SimpleSAML\Module\oidc\Factories\IdTokenResponseFactory', 'build']

  oidc.key.private:
    class: League\OAuth2\Server\CryptKey
    factory: ['@SimpleSAML\Module\oidc\Factories\CryptKeyFactory', 'buildPrivateKey']

  oidc.key.public:
    class: League\OAuth2\Server\CryptKey
    factory: ['@SimpleSAML\Module\oidc\Factories\CryptKeyFactory', 'buildPublicKey']

  SimpleSAML\Module\oidc\Factories\ResourceServerFactory:
    arguments:
      $publicKey: '@oidc.key.public'
  SimpleSAML\Module\oidc\Factories\AuthorizationServerFactory:
    arguments:
      $privateKey: '@oidc.key.private'
  SimpleSAML\Module\oidc\Factories\IdTokenResponseFactory:
    arguments:
      $privateKey: '@oidc.key.private'

  SimpleSAML\Module\oidc\Server\Validators\BearerTokenValidator:
    arguments:
      $publicKey: '@oidc.key.public'

  SimpleSAML\Module\oidc\Server\AuthorizationServer:
    factory: ['@SimpleSAML\Module\oidc\Factories\AuthorizationServerFactory', 'build']

  # OAuth2 Server
  League\OAuth2\Server\ResourceServer:
    factory: ['@SimpleSAML\Module\oidc\Factories\ResourceServerFactory', 'build']

  # Utils
  SimpleSAML\Module\oidc\Utils\RequestParamsResolver: ~

  SimpleSAML\Module\oidc\Utils\ClaimTranslatorExtractor:
    factory: ['@SimpleSAML\Module\oidc\Factories\ClaimTranslatorExtractorFactory', 'build']

  # Use (already available) Laminas\Diactoros package as PSR HTTP Factories.
  Laminas\Diactoros\ServerRequestFactory: ~
  Laminas\Diactoros\RequestFactory: ~
  Laminas\Diactoros\ResponseFactory: ~
  Laminas\Diactoros\StreamFactory: ~
  Laminas\Diactoros\UploadedFileFactory: ~

  # Symfony
  Symfony\Bridge\PsrHttpMessage\Factory\HttpFoundationFactory: ~

  # Ssp OpenId
  SimpleSAML\OpenID\Core: ~