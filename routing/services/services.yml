services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true
    autoconfigure: true
    public: false
    bind:
      #Psr\Log\LoggerInterface: '@SimpleSAML\Module\oidc\Services\LoggerService'
      League\OAuth2\Server\Repositories\ClientRepositoryInterface: '@SimpleSAML\Module\oidc\Repositories\ClientRepository'
      League\OAuth2\Server\Repositories\AccessTokenRepositoryInterface: '@SimpleSAML\Module\oidc\Repositories\AccessTokenRepository'
      League\OAuth2\Server\Repositories\ScopeRepositoryInterface: '@SimpleSAML\Module\oidc\Repositories\ScopeRepository'
      League\OAuth2\Server\CryptKey|string $privateKey: '@oidc.key.private'

  SimpleSAML\Module\oidc\Services\:
    resource: '../../src/Services/*'
    exclude: '../../src/Services/{Container.php}'

  SimpleSAML\Module\oidc\Repositories\:
    resource: '../../src/Repositories/*'
    exclude: '../../src/Repositories/{Interfaces}'

  SimpleSAML\Module\oidc\Factories\:
    resource: '../../src/Factories/*'

  SimpleSAML\Module\oidc\Stores\:
    resource: '../../src/Stores/*'

  League\OAuth2\Server\ResourceServer: ~

  SimpleSAML\Module\oidc\Utils\ClaimTranslatorExtractor: ~

  SimpleSAML\Module\oidc\ModuleConfig: ~

  oidc.key.private:
    class: League\OAuth2\Server\CryptKey
    factory: ['@SimpleSAML\Module\oidc\Factories\CryptKeyFactory', 'buildPrivateKey']

  SimpleSAML\Module\oidc\Server\AuthorizationServer:
    arguments:
      $encryptionKey: '@=service("SimpleSAML\\Module\\oidc\\ModuleConfig").getEncryptionKey()'
