{% extends "@oidc/oidc_base.twig" %}

{% block content %}
    <h2>{{ pagetitle }}</h2>

    <div class="ui hidden divider"></div>

    {{ form.render('begin') }}
        {% if form.hasErrors %}
            <div class="ui negative message">
                <ul>
                    {% for error in form.getErrors %}
                        <li>{{ error | trans }}</li>
                    {% endfor %}
                </ul>
            </div>
        {% endif %}

        <div class="field required">
            <label for="frm-name">{{ '{oidc:client:name}'|trans }}</label>

            {{ form['name'].control | raw }}
        </div>

        <div class="field">
            <label for="frm-description">{{ '{oidc:client:description}'|trans }}</label>

            {{ form['description'].control | raw }}
        </div>

        <div class="field">
            <label for="frm-is_enabled">{{ '{oidc:client:state}'|trans }}</label>
            <div class="inline fields">
                <div class="field">
                    <div class="ui radio checkbox">
                        <input type="radio"
                               id="frm-enabled"
                               name="is_enabled"
                               {% if form['is_enabled'].value == true %}checked=""{% endif %}
                               tabindex="0"
                               value="1"
                               class="hidden">
                        <label for="frm-enabled">{{ '{oidc:client:is_enabled}'|trans }}</label>
                    </div>
                </div>
                <div class="field">
                    <div class="ui radio checkbox">
                        <input type="radio"
                               id="frm-disabled"
                               name="is_enabled"
                               {% if form['is_enabled'].value == false %}checked=""{% endif %}
                               tabindex="0"
                               value="0"
                               class="hidden">
                        <label for="frm-disabled">{{ '{oidc:client:deactivated}'|trans }}</label>
                    </div>
                </div>
            </div>
        </div>

        <div class="field">
            <label for="is_confidential">{{ '{oidc:client:type}'|trans }}</label>
            <div class="inline fields">
                <div class="field">
                    <div class="ui radio checkbox">
                        <input type="radio"
                               id="frm-confidential"
                               name="is_confidential"
                               {% if form['is_confidential'].value == true %}checked=""{% endif %}
                               tabindex="0"
                               value="1"
                               class="hidden">
                        <label for="frm-is_confidential">{{ '{oidc:client:confidential}'|trans }}</label>
                    </div>
                </div>
                <div class="field">
                    <div class="ui radio checkbox">
                        <input type="radio"
                               id="frm-public"
                               name="is_confidential"
                               {% if form['is_confidential'].value == false %}checked=""{% endif %}
                               tabindex="0"
                               value="0"
                               class="hidden">
                        <label for="frm-is_confidential">{{ '{oidc:client:public}'|trans }}</label>
                    </div>
                </div>
            </div>
            <small class="helper">{{ '{oidc:client:confidential_help}'|trans }}</small>
        </div>

        <div class="field required">
            <label for="frm-redirect_uri">{{ '{oidc:client:redirect_uri}'|trans }}</label>

            {{ form['redirect_uri'].control | raw }}
            <small class="helper">{{ '{oidc:client:redirect_uri_help}'|trans }}</small>
        </div>

        <div class="field">
            <label for="frm-auth_source">{{ '{oidc:client:auth_source}'|trans }}</label>

            {{ form['auth_source'].control | raw }}
            <small class="helper">{{ '{oidc:client:auth_source_help}'|trans }}</small>
        </div>

        <div class="field required">
            <label for="frm-scopes">{{ '{oidc:client:scopes}'|trans }}</label>

            {{ form['scopes'].control | raw }}
        </div>

        <div class="field">
            <label for="frm-backchannel_logout_uri">{{ '{oidc:client:backchannel_logout_uri}'|trans }}</label>

            {{ form['backchannel_logout_uri'].control | raw }}
            <small class="helper">{{ '{oidc:client:backchannel_logout_uri_help}'|trans }}</small>
        </div>

        <div class="field ">
            <label for="frm-post_logout_redirect_uri">{{ '{oidc:client:post_logout_redirect_uri}'|trans }}</label>

            {{ form['post_logout_redirect_uri'].control | raw }}
            <small class="helper">{{ '{oidc:client:post_logout_redirect_uri_help}'|trans }}</small>
        </div>

        {% if form['is_confidential'].value == true %}
        <div id="fld-allowed_origin" class="field">
            <label for="frm-allowed_origin">{{ '{oidc:client:allowed_origin}'|trans }}</label>

            {{ form['allowed_origin'].control | raw }}
            <small class="helper">{{ '{oidc:client:allowed_origin_help}'|trans }}</small>
        </div>
        {% endif %}

        <h3 class="ui dividing header">OpenID Federation related properties</h3>

        <div class="field">
            <label for="frm-entity_identifier">{{ 'Entity Identifier'|trans }}</label>

            {{ form['entity_identifier'].control | raw }}
            <small class="helper">
                {% trans %}A globally unique URI that is bound to the entity. URI must have https or http scheme and
                host / domain. It can contain path, but no query, or fragment component.{% endtrans %}
            </small>
        </div>

        <div class="field">
            <label for="frm-client_registration_types">{{ 'Registration types'|trans }}</label>

            {{ form['client_registration_types'].control | raw }}
            <small class="helper">
                {% trans %}One or more values from the list. If not selected, falls back to 'automatic'.{% endtrans %}
            </small>
        </div>

        <div class="field">
            <label for="frm-federation_jwks">{{ 'Federation JWKS'|trans }}</label>

            {{ form['federation_jwks'].control | raw }}
            <small class="helper">
                {% trans %}JSON object (string) representing federation JWKS (used in entity statements). Example:
                {"keys":[{"kty": "RSA","n": "...","e": "AQAB","kid": "...","use": "sig","alg": "RS256"}]}{% endtrans %}
            </small>
        </div>

        <div class="ui divider"></div>

        <div class="ui buttons">
            {% block action %}{% endblock %}
            <a class="ui secondary icon labeled button" href="./index.php">
                <i class="left arrow icon"></i>
                {{ '{oidc:return}'|trans }}
            </a>
        </div>

        <div class="ui error message"></div>
    {{ form.render('end') }}
{% endblock %}

{% block postload %}
    {{ parent() }}
    <script>
        $(document).ready(function () {
            toggleAllowedOrigins();
            $('#frm-confidential').change(toggleAllowedOrigins);
            $('#frm-public').change(toggleAllowedOrigins);
        });

        function toggleAllowedOrigins() {
            if($('#frm-confidential').prop('checked')) {
                $('#frm-allowed_origin').prop('disabled', true);
                $('#fld-allowed_origin').hide('slow');
            } else {
                $('#frm-allowed_origin').prop('disabled', false);
                $('#fld-allowed_origin').show('slow');
            }
        }

        $.fn.form.settings.rules.redirectUri = function(value) {
            return value.trim().split("\n").reduce(function(current, url) {
                return current && null !== url.match({{ regexUri | raw }});
            }, true)
        };

        $.fn.form.settings.rules.allowedOrigin = function(value) {
            var urls = value.trim().split("\n");

            if (urls.length && urls[0] !== '') {
                return urls.reduce(function(current, url) {
                    return current && null !== url.match({{ regexAllowedOriginUrl | raw }});
                }, true)
            }

            return true;
        };

        $.fn.form.settings.rules.postLogoutRedirectUri = function(value) {
            var urls = value.trim().split("\n");

            if (urls.length && urls[0] !== '') {
                return urls.reduce(function(current, url) {
                    return current && null !== url.match({{ regexUri | raw }});
                }, true)
            }

            return true;
        };

        $.fn.form.settings.rules.backChannelLogoutUri = function(value) {
            var uri = value.trim();

            if (uri.length) {
                return null !== uri.match({{ regexHttpUri | raw }});
            }

            return true;
        };

        $.fn.form.settings.rules.entityIdentifier = function(value) {
            var uri = value.trim();

            if (uri.length) {
                return null !== uri.match({{ regexHttpUriPath | raw }});
            }

            return true;
        };

        var formEl = $('.ui.form');
        formEl.checkbox();

        formEl.form({
                fields: {
                    name: {
                        identifier: 'name',
                        rules: [
                            {
                                type: 'empty',
                                prompt: '{{ "{oidc:client:name_not_empty}"|trans }}'
                            }
                        ]
                    },
                    redirect_uri: {
                        identifier: 'redirect_uri',
                        rules: [
                            {
                                type: 'empty',
                                prompt: '{{ "{oidc:client:redirect_uri_not_empty}"|trans }}'
                            },
                            {
                                type: 'redirectUri',
                                prompt: '{{ "{oidc:client:redirect_uri_not_valid}"|trans }}'
                            }
                        ]
                    },
                    auth_source: {
                        identifier: 'auth_source',
                        rules: []
                    },
                    scopes: {
                        identifier: 'scopes[]',
                        rules: [
                            {
                                type: 'minCount[1]',
                                prompt: '{{ "{oidc:client:scopes_not_empty}"|trans }}'
                            }
                        ]
                    },
                    allowed_origin: {
                        identifier: 'allowed_origin',
                        rules: [
                            {
                                type: 'allowedOrigin',
                                prompt: '{{ "{oidc:client:allowed_origin_not_valid}"|trans }}'
                            }
                        ]
                    },
                    post_logout_redirect_uri: {
                        identifier: 'post_logout_redirect_uri',
                        rules: [
                            {
                                type: 'postLogoutRedirectUri',
                                prompt: '{{ "{oidc:client:post_logout_redirect_uri_not_valid}"|trans }}'
                            }
                        ]
                    },
                    backchannel_logout_uri: {
                        identifier: 'backchannel_logout_uri',
                        rules: [
                            {
                                type: 'backChannelLogoutUri',
                                prompt: '{{ "{oidc:client:backchannel_logout_uri_not_valid}"|trans }}'
                            }
                        ]
                    },
                    entity_identifier: {
                        identifier: 'entity_identifier',
                        rules: [
                            {
                                type: 'entityIdentifier',
                                prompt: '{{ "Entity Identifier URI not valid."|trans }}'
                            }
                        ]
                    }
                }
            });


    </script>
{% endblock %}
